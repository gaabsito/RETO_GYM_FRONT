apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        # Configuración para Vue Router (modo history)
        location / {
            try_files $uri $uri/ /index.html;
        }
        # Configuración para proxy inverso a la API backend
        location /api/ {
            proxy_pass https://entrenateapi.retocsv.es/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }
    }
  env.js: |
    window.VUE_APP_API_URL = '/api';
    window.VUE_APP_GOOGLE_CLIENT_ID = '1088462991637-hqvnr9hmlqpv6lfin0sga0o1h5k4kv21.apps.googleusercontent.com';

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: gaabsito/tfg:gymweb
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          # AGREGAR ESTAS VARIABLES DE ENTORNO AQUÍ:
          env:
            - name: VUE_APP_API_URL
              value: "/api"
            - name: API_URL
              value: "/api"
            - name: VITE_API_URL
              value: "/api"
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: env-volume
              mountPath: /usr/share/nginx/html/env.js
              subPath: env.js
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: frontend-config
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: env-volume
          configMap:
            name: frontend-config
            items:
              - key: env.js
                path: env.js

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  annotations:
    # Anotaciones SSL movidas aquí (al Service)
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:410591670317:certificate/55d9d737-59e9-46ef-bd8e-90efa5573944
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    # Política de SSL para terminación en el Load Balancer
    service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: ELBSecurityPolicy-TLS-1-2-2017-01
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 80
      protocol: TCP
  type: LoadBalancer